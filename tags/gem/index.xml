<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gem on Ilya Bylich - Blog</title><link>https://iliabylich.github.io/tags/gem/</link><description>Recent content in Gem on Ilya Bylich - Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 14 Apr 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://iliabylich.github.io/tags/gem/index.xml" rel="self" type="application/rss+xml"/><item><title>ExceptionManager gem</title><link>https://iliabylich.github.io/2015-04-14-exception-manager-gem/</link><pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate><guid>https://iliabylich.github.io/2015-04-14-exception-manager-gem/</guid><description>What is this? ExceptionManager is a gem for getting extra information from your exception.
Source code: https://github.com/iliabylich/exception_manager With this gem every time when you get an exception, it&amp;rsquo;s possible to grab subject of exception (the instance of class where raise happened), locals - local variables, subject_instance_variables and subject_class_variables
Examples:
require &amp;#39;exception_manager&amp;#39; ExceptionManager.enable! class TestClassThatRaisesException @@class_variable = :class_value def test_error(*args) @instance_variable = :instance_value raise &amp;#39;Test error&amp;#39; end end begin TestClassThatRaisesException.new.test_error(1, 2, 3) rescue =&amp;gt; e puts &amp;#34;Subject: #{e.</description></item></channel></rss>